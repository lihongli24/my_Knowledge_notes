@startuml

package archetype_project_parent {
    package archetype_project_start {
        [StartUp]
        [Health_check]
    }

    package archetype_project_adapter{
        [rest_controller]
        [dubbo_provider]
        [atop]
        [kafka_consumer]
    }

    package archetype_project_task{
        [task_job]
    }

    package archetype_project_client {
        [client_service]
        [client_object]
        [client_exception]
        [client_constants]
        [client_enum]
    }

    package archetype_project_application {
        [service_impl]
        [event_bus]
        [event_handler]
        [command_bus]
        [command_handler]
        [query_service]
    }

    package archetype_project_domain {
        [aggregate]
        [entity]
        [factory]
        [repository]
        [valueobject]
        [domain_converter]
    }

    package archetype_project_integration {
        [remote_object]
        [remote_service]
        [remote_converter]
    }

    package archetype_project_infrastructure {
        [dao]
        [mq_sender_client]
        [data_object]
        [do_converter]
    }

}

archetype_project_start -down-> archetype_project_adapter
archetype_project_start -down-> archetype_project_task
archetype_project_adapter -down-> archetype_project_application
archetype_project_task -down-> archetype_project_application
archetype_project_application -down-> archetype_project_domain
archetype_project_application -down-> archetype_project_integration
archetype_project_application -down-> archetype_project_infrastructure
archetype_project_domain -down-> archetype_project_infrastructure

archetype_project_application -up-> archetype_project_client

database "MySql" {
  folder "tables" {
	[table1]
	[table2]
  }
}

cloud {
  dubbo -[dubbo_service]
}

database "MongoDb" {
  folder "documents" {
	[document1]
	[document2]
  }
}

database "Elasticsearch" {
  folder "indices" {
	[index1]
	[index2]
  }
}

database "Redis" {
  folder "List" {
	[list1]
	[list2]
  }
}

database "Kafka" {
  folder "topic" {
	[topic1]
	[topic2]
  }
}

[remote_service] --> dubbo
[repository] -down-> Redis
[mq_sender_client] -up-> topic
[dao] --> MySql
[dao] --> MongoDb
[dao] -right-> Elasticsearch

[kafka_consumer] <-down- Kafka


@enduml